// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: merkle.proto

package com.woo.merkle.proto;

/**
 * Protobuf type {@code merkle.MerkleNode}
 */
public final class MerkleNode extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:merkle.MerkleNode)
    MerkleNodeOrBuilder {
private static final long serialVersionUID = 0L;
  // Use MerkleNode.newBuilder() to construct.
  private MerkleNode(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private MerkleNode() {
    hash_ = com.google.protobuf.ByteString.EMPTY;
    left_ = com.google.protobuf.ByteString.EMPTY;
    right_ = com.google.protobuf.ByteString.EMPTY;
    parent_ = com.google.protobuf.ByteString.EMPTY;
  }

  @Override
  @SuppressWarnings({"unused"})
  protected Object newInstance(
      UnusedPrivateParameter unused) {
    return new MerkleNode();
  }

  @Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return Merkle.internal_static_merkle_MerkleNode_descriptor;
  }

  @Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return Merkle.internal_static_merkle_MerkleNode_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            MerkleNode.class, Builder.class);
  }

  private int bitField0_;
  public static final int HASH_FIELD_NUMBER = 1;
  private com.google.protobuf.ByteString hash_;
  /**
   * <code>optional bytes hash = 1;</code>
   * @return Whether the hash field is set.
   */
  @Override
  public boolean hasHash() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <code>optional bytes hash = 1;</code>
   * @return The hash.
   */
  @Override
  public com.google.protobuf.ByteString getHash() {
    return hash_;
  }

  public static final int LEFT_FIELD_NUMBER = 2;
  private com.google.protobuf.ByteString left_;
  /**
   * <pre>
   * hash of left merkle node
   * </pre>
   *
   * <code>optional bytes left = 2;</code>
   * @return Whether the left field is set.
   */
  @Override
  public boolean hasLeft() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * hash of left merkle node
   * </pre>
   *
   * <code>optional bytes left = 2;</code>
   * @return The left.
   */
  @Override
  public com.google.protobuf.ByteString getLeft() {
    return left_;
  }

  public static final int RIGHT_FIELD_NUMBER = 3;
  private com.google.protobuf.ByteString right_;
  /**
   * <code>optional bytes right = 3;</code>
   * @return Whether the right field is set.
   */
  @Override
  public boolean hasRight() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <code>optional bytes right = 3;</code>
   * @return The right.
   */
  @Override
  public com.google.protobuf.ByteString getRight() {
    return right_;
  }

  public static final int PARENT_FIELD_NUMBER = 4;
  private com.google.protobuf.ByteString parent_;
  /**
   * <code>optional bytes parent = 4;</code>
   * @return Whether the parent field is set.
   */
  @Override
  public boolean hasParent() {
    return ((bitField0_ & 0x00000008) != 0);
  }
  /**
   * <code>optional bytes parent = 4;</code>
   * @return The parent.
   */
  @Override
  public com.google.protobuf.ByteString getParent() {
    return parent_;
  }

  public static final int BALANCE_FIELD_NUMBER = 5;
  private MerkleBalanceVector balance_;
  /**
   * <code>.merkle.MerkleBalanceVector balance = 5;</code>
   * @return Whether the balance field is set.
   */
  @Override
  public boolean hasBalance() {
    return balance_ != null;
  }
  /**
   * <code>.merkle.MerkleBalanceVector balance = 5;</code>
   * @return The balance.
   */
  @Override
  public MerkleBalanceVector getBalance() {
    return balance_ == null ? MerkleBalanceVector.getDefaultInstance() : balance_;
  }
  /**
   * <code>.merkle.MerkleBalanceVector balance = 5;</code>
   */
  @Override
  public MerkleBalanceVectorOrBuilder getBalanceOrBuilder() {
    return getBalance();
  }

  private byte memoizedIsInitialized = -1;
  @Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeBytes(1, hash_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeBytes(2, left_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      output.writeBytes(3, right_);
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      output.writeBytes(4, parent_);
    }
    if (balance_ != null) {
      output.writeMessage(5, getBalance());
    }
    getUnknownFields().writeTo(output);
  }

  @Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBytesSize(1, hash_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBytesSize(2, left_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBytesSize(3, right_);
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBytesSize(4, parent_);
    }
    if (balance_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getBalance());
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @Override
  public boolean equals(final Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof MerkleNode)) {
      return super.equals(obj);
    }
    MerkleNode other = (MerkleNode) obj;

    if (hasHash() != other.hasHash()) return false;
    if (hasHash()) {
      if (!getHash()
          .equals(other.getHash())) return false;
    }
    if (hasLeft() != other.hasLeft()) return false;
    if (hasLeft()) {
      if (!getLeft()
          .equals(other.getLeft())) return false;
    }
    if (hasRight() != other.hasRight()) return false;
    if (hasRight()) {
      if (!getRight()
          .equals(other.getRight())) return false;
    }
    if (hasParent() != other.hasParent()) return false;
    if (hasParent()) {
      if (!getParent()
          .equals(other.getParent())) return false;
    }
    if (hasBalance() != other.hasBalance()) return false;
    if (hasBalance()) {
      if (!getBalance()
          .equals(other.getBalance())) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasHash()) {
      hash = (37 * hash) + HASH_FIELD_NUMBER;
      hash = (53 * hash) + getHash().hashCode();
    }
    if (hasLeft()) {
      hash = (37 * hash) + LEFT_FIELD_NUMBER;
      hash = (53 * hash) + getLeft().hashCode();
    }
    if (hasRight()) {
      hash = (37 * hash) + RIGHT_FIELD_NUMBER;
      hash = (53 * hash) + getRight().hashCode();
    }
    if (hasParent()) {
      hash = (37 * hash) + PARENT_FIELD_NUMBER;
      hash = (53 * hash) + getParent().hashCode();
    }
    if (hasBalance()) {
      hash = (37 * hash) + BALANCE_FIELD_NUMBER;
      hash = (53 * hash) + getBalance().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static MerkleNode parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static MerkleNode parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static MerkleNode parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static MerkleNode parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static MerkleNode parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static MerkleNode parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static MerkleNode parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static MerkleNode parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static MerkleNode parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static MerkleNode parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static MerkleNode parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static MerkleNode parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(MerkleNode prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code merkle.MerkleNode}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:merkle.MerkleNode)
      MerkleNodeOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Merkle.internal_static_merkle_MerkleNode_descriptor;
    }

    @Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Merkle.internal_static_merkle_MerkleNode_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MerkleNode.class, Builder.class);
    }

    // Construct using com.woo.merkle.proto.MerkleNode.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @Override
    public Builder clear() {
      super.clear();
      hash_ = com.google.protobuf.ByteString.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000001);
      left_ = com.google.protobuf.ByteString.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000002);
      right_ = com.google.protobuf.ByteString.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000004);
      parent_ = com.google.protobuf.ByteString.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000008);
      if (balanceBuilder_ == null) {
        balance_ = null;
      } else {
        balance_ = null;
        balanceBuilder_ = null;
      }
      return this;
    }

    @Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return Merkle.internal_static_merkle_MerkleNode_descriptor;
    }

    @Override
    public MerkleNode getDefaultInstanceForType() {
      return MerkleNode.getDefaultInstance();
    }

    @Override
    public MerkleNode build() {
      MerkleNode result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @Override
    public MerkleNode buildPartial() {
      MerkleNode result = new MerkleNode(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        to_bitField0_ |= 0x00000001;
      }
      result.hash_ = hash_;
      if (((from_bitField0_ & 0x00000002) != 0)) {
        to_bitField0_ |= 0x00000002;
      }
      result.left_ = left_;
      if (((from_bitField0_ & 0x00000004) != 0)) {
        to_bitField0_ |= 0x00000004;
      }
      result.right_ = right_;
      if (((from_bitField0_ & 0x00000008) != 0)) {
        to_bitField0_ |= 0x00000008;
      }
      result.parent_ = parent_;
      if (balanceBuilder_ == null) {
        result.balance_ = balance_;
      } else {
        result.balance_ = balanceBuilder_.build();
      }
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    @Override
    public Builder clone() {
      return super.clone();
    }
    @Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.setField(field, value);
    }
    @Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.addRepeatedField(field, value);
    }
    @Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof MerkleNode) {
        return mergeFrom((MerkleNode)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(MerkleNode other) {
      if (other == MerkleNode.getDefaultInstance()) return this;
      if (other.hasHash()) {
        setHash(other.getHash());
      }
      if (other.hasLeft()) {
        setLeft(other.getLeft());
      }
      if (other.hasRight()) {
        setRight(other.getRight());
      }
      if (other.hasParent()) {
        setParent(other.getParent());
      }
      if (other.hasBalance()) {
        mergeBalance(other.getBalance());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @Override
    public final boolean isInitialized() {
      return true;
    }

    @Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              hash_ = input.readBytes();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              left_ = input.readBytes();
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 26: {
              right_ = input.readBytes();
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            case 34: {
              parent_ = input.readBytes();
              bitField0_ |= 0x00000008;
              break;
            } // case 34
            case 42: {
              input.readMessage(
                  getBalanceFieldBuilder().getBuilder(),
                  extensionRegistry);

              break;
            } // case 42
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private com.google.protobuf.ByteString hash_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <code>optional bytes hash = 1;</code>
     * @return Whether the hash field is set.
     */
    @Override
    public boolean hasHash() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional bytes hash = 1;</code>
     * @return The hash.
     */
    @Override
    public com.google.protobuf.ByteString getHash() {
      return hash_;
    }
    /**
     * <code>optional bytes hash = 1;</code>
     * @param value The hash to set.
     * @return This builder for chaining.
     */
    public Builder setHash(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      hash_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional bytes hash = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearHash() {
      bitField0_ = (bitField0_ & ~0x00000001);
      hash_ = getDefaultInstance().getHash();
      onChanged();
      return this;
    }

    private com.google.protobuf.ByteString left_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <pre>
     * hash of left merkle node
     * </pre>
     *
     * <code>optional bytes left = 2;</code>
     * @return Whether the left field is set.
     */
    @Override
    public boolean hasLeft() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * hash of left merkle node
     * </pre>
     *
     * <code>optional bytes left = 2;</code>
     * @return The left.
     */
    @Override
    public com.google.protobuf.ByteString getLeft() {
      return left_;
    }
    /**
     * <pre>
     * hash of left merkle node
     * </pre>
     *
     * <code>optional bytes left = 2;</code>
     * @param value The left to set.
     * @return This builder for chaining.
     */
    public Builder setLeft(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      left_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * hash of left merkle node
     * </pre>
     *
     * <code>optional bytes left = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearLeft() {
      bitField0_ = (bitField0_ & ~0x00000002);
      left_ = getDefaultInstance().getLeft();
      onChanged();
      return this;
    }

    private com.google.protobuf.ByteString right_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <code>optional bytes right = 3;</code>
     * @return Whether the right field is set.
     */
    @Override
    public boolean hasRight() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional bytes right = 3;</code>
     * @return The right.
     */
    @Override
    public com.google.protobuf.ByteString getRight() {
      return right_;
    }
    /**
     * <code>optional bytes right = 3;</code>
     * @param value The right to set.
     * @return This builder for chaining.
     */
    public Builder setRight(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
      right_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional bytes right = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearRight() {
      bitField0_ = (bitField0_ & ~0x00000004);
      right_ = getDefaultInstance().getRight();
      onChanged();
      return this;
    }

    private com.google.protobuf.ByteString parent_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <code>optional bytes parent = 4;</code>
     * @return Whether the parent field is set.
     */
    @Override
    public boolean hasParent() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional bytes parent = 4;</code>
     * @return The parent.
     */
    @Override
    public com.google.protobuf.ByteString getParent() {
      return parent_;
    }
    /**
     * <code>optional bytes parent = 4;</code>
     * @param value The parent to set.
     * @return This builder for chaining.
     */
    public Builder setParent(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
      parent_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional bytes parent = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearParent() {
      bitField0_ = (bitField0_ & ~0x00000008);
      parent_ = getDefaultInstance().getParent();
      onChanged();
      return this;
    }

    private MerkleBalanceVector balance_;
    private com.google.protobuf.SingleFieldBuilderV3<
        MerkleBalanceVector, MerkleBalanceVector.Builder, MerkleBalanceVectorOrBuilder> balanceBuilder_;
    /**
     * <code>.merkle.MerkleBalanceVector balance = 5;</code>
     * @return Whether the balance field is set.
     */
    public boolean hasBalance() {
      return balanceBuilder_ != null || balance_ != null;
    }
    /**
     * <code>.merkle.MerkleBalanceVector balance = 5;</code>
     * @return The balance.
     */
    public MerkleBalanceVector getBalance() {
      if (balanceBuilder_ == null) {
        return balance_ == null ? MerkleBalanceVector.getDefaultInstance() : balance_;
      } else {
        return balanceBuilder_.getMessage();
      }
    }
    /**
     * <code>.merkle.MerkleBalanceVector balance = 5;</code>
     */
    public Builder setBalance(MerkleBalanceVector value) {
      if (balanceBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        balance_ = value;
        onChanged();
      } else {
        balanceBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.merkle.MerkleBalanceVector balance = 5;</code>
     */
    public Builder setBalance(
        MerkleBalanceVector.Builder builderForValue) {
      if (balanceBuilder_ == null) {
        balance_ = builderForValue.build();
        onChanged();
      } else {
        balanceBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.merkle.MerkleBalanceVector balance = 5;</code>
     */
    public Builder mergeBalance(MerkleBalanceVector value) {
      if (balanceBuilder_ == null) {
        if (balance_ != null) {
          balance_ =
            MerkleBalanceVector.newBuilder(balance_).mergeFrom(value).buildPartial();
        } else {
          balance_ = value;
        }
        onChanged();
      } else {
        balanceBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.merkle.MerkleBalanceVector balance = 5;</code>
     */
    public Builder clearBalance() {
      if (balanceBuilder_ == null) {
        balance_ = null;
        onChanged();
      } else {
        balance_ = null;
        balanceBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.merkle.MerkleBalanceVector balance = 5;</code>
     */
    public MerkleBalanceVector.Builder getBalanceBuilder() {
      
      onChanged();
      return getBalanceFieldBuilder().getBuilder();
    }
    /**
     * <code>.merkle.MerkleBalanceVector balance = 5;</code>
     */
    public MerkleBalanceVectorOrBuilder getBalanceOrBuilder() {
      if (balanceBuilder_ != null) {
        return balanceBuilder_.getMessageOrBuilder();
      } else {
        return balance_ == null ?
            MerkleBalanceVector.getDefaultInstance() : balance_;
      }
    }
    /**
     * <code>.merkle.MerkleBalanceVector balance = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        MerkleBalanceVector, MerkleBalanceVector.Builder, MerkleBalanceVectorOrBuilder>
        getBalanceFieldBuilder() {
      if (balanceBuilder_ == null) {
        balanceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            MerkleBalanceVector, MerkleBalanceVector.Builder, MerkleBalanceVectorOrBuilder>(
                getBalance(),
                getParentForChildren(),
                isClean());
        balance_ = null;
      }
      return balanceBuilder_;
    }
    @Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:merkle.MerkleNode)
  }

  // @@protoc_insertion_point(class_scope:merkle.MerkleNode)
  private static final MerkleNode DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new MerkleNode();
  }

  public static MerkleNode getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<MerkleNode>
      PARSER = new com.google.protobuf.AbstractParser<MerkleNode>() {
    @Override
    public MerkleNode parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<MerkleNode> parser() {
    return PARSER;
  }

  @Override
  public com.google.protobuf.Parser<MerkleNode> getParserForType() {
    return PARSER;
  }

  @Override
  public MerkleNode getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

